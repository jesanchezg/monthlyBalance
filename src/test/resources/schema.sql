CREATE SEQUENCE IF NOT EXISTS group_user_seq;

CREATE TABLE IF NOT EXISTS GROUP_USER(
    GROUP_USER_ID BIGINT NOT NULL DEFAULT nextval('group_user_seq') PRIMARY KEY,
    NAME VARCHAR(255)
);

CREATE SEQUENCE IF NOT EXISTS utilisateur_seq;

CREATE TABLE IF NOT EXISTS UTILISATEUR(
    UTILISATEUR_ID BIGINT NOT NULL DEFAULT nextval('utilisateur_seq') PRIMARY KEY,
    AGE INTEGER NOT NULL,
    EMAIL VARCHAR(255),
    EMPLOYED BOOLEAN NOT NULL,
    FULL_NAME VARCHAR(255),
    GENDER VARCHAR(255),
    GROUP_USERS_ID BIGINT REFERENCES GROUP_USER
);

CREATE SEQUENCE IF NOT EXISTS payment_seq;

CREATE TABLE IF NOT EXISTS PAYMENT(
    PAYMENT_ID BIGINT NOT NULL DEFAULT nextval('payment_seq') PRIMARY KEY,
    DATE TIMESTAMP,
    PLACE VARCHAR(255),
    VALUE DOUBLE PRECISION NOT NULL,
    UTILISATEUR_ID BIGINT REFERENCES UTILISATEUR
);
------------- FOR MONTH ----------------
--CREATE OR REPLACE FUNCTION MONTH(TIMESTAMP without TIME ZONE) RETURNS INTEGER
--AS $$
--      SELECT EXTRACT(MONTH FROM $1)::INTEGER;
--$$ LANGUAGE SQL IMMUTABLE;
--CREATE OR REPLACE FUNCTION MONTH(TIMESTAMP WITH TIME ZONE) RETURNS INTEGER
--AS $$
--      SELECT EXTRACT(MONTH FROM $1)::INTEGER;
--$$ LANGUAGE SQL STABLE;
--CREATE OR REPLACE FUNCTION MONTH(DATE) RETURNS INTEGER
--AS $$
--      SELECT EXTRACT(MONTH FROM $1)::INTEGER;
--$$ LANGUAGE SQL IMMUTABLE;
------------- FOR YEAR ----------------
--CREATE OR REPLACE FUNCTION YEAR(TIMESTAMP without TIME ZONE) RETURNS INTEGER
--AS $$
--      SELECT EXTRACT(YEAR FROM $1)::INTEGER;
--$$ LANGUAGE SQL IMMUTABLE;
--CREATE OR REPLACE FUNCTION YEAR(TIMESTAMP WITH TIME ZONE) RETURNS INTEGER
--AS $$
--      SELECT EXTRACT(YEAR FROM $1)::INTEGER;
--$$ LANGUAGE SQL STABLE;
--CREATE OR REPLACE FUNCTION YEAR(DATE) RETURNS INTEGER
--AS $$
--      SELECT EXTRACT(YEAR FROM $1)::INTEGER;
--$$ LANGUAGE SQL IMMUTABLE;